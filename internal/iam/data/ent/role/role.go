// Code generated by entc, DO NOT EDIT.

package role

import (
	"time"
)

const (
	// Label holds the string label denoting the role type in the database.
	Label = "role"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRolename holds the string denoting the rolename field in the database.
	FieldRolename = "rolename"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// EdgeBindings holds the string denoting the bindings edge name in mutations.
	EdgeBindings = "bindings"
	// Table holds the table name of the role in the database.
	Table = "roles"
	// BindingsTable is the table that holds the bindings relation/edge.
	BindingsTable = "bind_user_roles"
	// BindingsInverseTable is the table name for the BindUserRole entity.
	// It exists in this package in order to avoid circular dependency with the "binduserrole" package.
	BindingsInverseTable = "bind_user_roles"
	// BindingsColumn is the table column denoting the bindings relation/edge.
	BindingsColumn = "role_bindings"
)

// Columns holds all SQL columns for role fields.
var Columns = []string{
	FieldID,
	FieldRolename,
	FieldStatus,
	FieldCreateTime,
	FieldUpdateTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// RolenameValidator is a validator for the "rolename" field. It is called by the builders before save.
	RolenameValidator func(string) error
	// StatusValidator is a validator for the "status" field. It is called by the builders before save.
	StatusValidator func(string) error
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
)
